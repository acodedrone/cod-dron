
class IDroneMapper(ABC):
    """
    Абстрактный класс, представляющий маппер для управления дронами в базе данных.

    Методы:
    __init__(self, conn):
        Инициализирует маппер с подключением к базе данных.
    insert_drone(self, drone: Drone):
        Абстрактный метод для добавления дрона в базу данных.
    remove_drone(self, drone: Drone):
        Абстрактный метод для удаления дрона из базы данных.
    get_drone_id(self, drone_id: int):
        Абстрактный метод для получения дрона по идентификатору.
    get_drone_sn(self, drone: Drone):
        Абстрактный метод для получения дрона по серийному номеру.
    update_drone(self, drone: Drone, update_data: dict):
        Абстрактный метод для обновления данных дрона в базе данных.
    get_drones(self):
        Абстрактный метод для получения списка всех дронов из базы данных.
    """
    def __init__(self, conn):
        """
        Инициализирует маппер с подключением к базе данных.

        Аргументы:
        conn: Подключение к базе данных.
        """


class SQLiteDroneMapper(IDroneMapper):
    """
    Реализация маппера для управления дронами с использованием SQLite.

    Методы:
    insert_drone(self, drone: Drone):
        Добавляет дрон в базу данных SQLite.
    remove_drone(self, drone: Drone):
        Удаляет дрон из базы данных SQLite.
    get_drone_id(self, drone_id: int):
        Получает дрон по идентификатору из базы данных SQLite.
    get_drone_sn(self, drone: Drone):
        Получает дрон по серийному номеру из базы данных SQLite.
    update_drone(self, drone: Drone, update_data: dict):
        Обновляет данные дрона в базе данных SQLite.
    get_drones(self):
        Получает список всех дронов из базы данных SQLite.
    """
    def insert_drone(self, drone: Drone):
        """
        Добавляет дрон в базу данных SQLite.

        Аргументы:
        drone (Drone): Объект дрона для добавления.

        Возвращаемое значение:
        None

        Описание:
        - Формирует запрос на добавление дрона.
        - Выполняет запрос и фиксирует изменения в базе данных.
        - Устанавливает идентификатор дрона.
        
        Возможные исключения:
        - sqlite3.IntegrityError: Обрабатывает ошибки при добавлении дрона.
        """

    def remove_drone(self, drone: Drone):
        """
        Удаляет дрон из базы данных SQLite.

        Аргументы:
        drone (Drone): Объект дрона для удаления.

        Возвращаемое значение:
        None

        Описание:
        - Формирует запрос на удаление дрона.
        - Выполняет запрос и фиксирует изменения в базе данных.
        """

    def get_drone_id(self, drone_id: int):
        """
        Получает дрон по идентификатору из базы данных SQLite.

        Аргументы:
        drone_id (int): Идентификатор дрона для поиска.

        Возвращаемое значение:
        tuple: Значения дрона, если найден, иначе None.

        Описание:
        - Формирует запрос на получение дрона по идентификатору.
        - Выполняет запрос и возвращает результат.
        """

    def get_drone_sn(self, drone: Drone):
        """
        Получает дрон по серийному номеру из базы данных SQLite.

        Аргументы:
        drone (Drone): Объект дрона для поиска по серийному номеру.

        Возвращаемое значение:
        tuple: Значения дрона, если найден, иначе None.

        Описание:
        - Формирует запрос на получение дрона по серийному номеру.
        - Выполняет запрос и возвращает результат.
        """

    def update_drone(self, drone: Drone, update_data: dict):
        """
        Обновляет данные дрона в базе данных SQLite.

        Аргументы:
        drone (Drone): Объект дрона для обновления.
        update_data (dict): Данные для обновления.

        Возвращаемое значение:
        None

        Описание:
        - Формирует запрос на обновление данных дрона.
        - Выполняет запрос и фиксирует изменения в базе данных.
        """

    def get_drones(self):
        """
        Получает список всех дронов из базы данных SQLite.

        Возвращаемое значение:
        list: Список значений всех дронов.

        Описание:
        - Формирует запрос на получение всех дронов.
        - Выполняет запрос и возвращает результат.
        """


